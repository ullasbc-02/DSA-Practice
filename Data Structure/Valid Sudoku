class Solution {
    public boolean isValidSudoku(char[][] board) {
        Set<String> validate = new HashSet<>();
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                char number = board[i][j];
                if(board[i][j]=='.'){continue;}
                else if(!validate.add(number+"rows"+i) ||
                    !validate.add(number+"columns"+j) ||
                    !validate.add(number+"boxes"+i/3+"-"+j/3)){
                    return false;
                }
            }
        }
        return true;
    }
}
-----------------------------------------------------------------
from collections import defaultdict
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        rows = defaultdict(set)
        cols = defaultdict(set)
        grids = defaultdict(set)
        
        for r in range(9):
            for c in range(9):
                if board[r][c]==".":
                    continue
                if board[r][c] in rows[r] or board[r][c] in cols[c] or board[r][c] in grids[(r//3,c//3)]:
                    return False

                rows[r].add(board[r][c])
                cols[c].add(board[r][c])
                grids[(r//3,c//3)].add(board[r][c])                                                                       
                
        return True                                  
                                
