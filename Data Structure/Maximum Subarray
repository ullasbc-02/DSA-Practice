class Solution {
    public int maxSubArray(int[] nums) {
        int sum=0,max=Integer.MIN_VALUE;
        for(int i=0;i<nums.length;i++){
            for(int j=i;j<nums.length;j++){
                sum+=nums[j];
                if(max<sum)
                    max=sum;
            }
            sum=0;
        }
        return max;
    }
}

o(n^n) method --- To overcome this we use kadane's algorithm


------------------------------------------------------
class Solution {
    public int maxSubArray(int[] nums) {
        int sum=0,max=Integer.MIN_VALUE;
        for(int i=0;i<nums.length;i++){
            sum+=nums[i];
            if(max<sum)
                max=sum;
            if(sum<0)
                sum=0;
        }
        return max;
    }
}
------------------------------------------------------

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        max = -sys.maxsize-1
        sum=0
        for num in nums:
            sum = sum + num
            if(max<sum):
                max=sum
            if(sum<0):
                sum=0
        return max



