--------------------------If it was array we could do this------------------------
class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();
        for(int i=0;i<numRows;i++){
            for(int j=0;j<=i;j++){
                if(j==0 || i==j){
                    triangle.get(i).get(j)=1;
                }
                else
                {
                    triangle.get(i).get(j)=triangle.get(i-1).get(j-1)+triangle.get(i-1).get(j);
                }
            }
        }
        return triangle;
    }
}
-------------------------------------------------------------------------------------

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();

        for (int i = 0; i < numRows; i++) {
            List<Integer> row = new ArrayList<>();
            row.add(1);

            
            for (int j = 0; j < i - 1; j++) {
                row.add(triangle.get(i - 1).get(j) + triangle.get(i - 1).get(j + 1));
            }
            
            if(i!=0)
                row.add(1);
            triangle.add(row);
        }

        return triangle;
    }
}
