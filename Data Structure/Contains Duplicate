class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        nums.sort()
        for i in range(len(nums)-1):
            if(nums[i]==nums[i+1]):
                return True
        else:
            return False
            
    ------------------------------------------------------------------------
    class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        return len(nums)!=len(set(nums))
        
   --------------------------------------------------
   
   class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> hash_set = new HashSet<Integer>();
		for(Integer i :nums) {
			hash_set.add(i);
		}
        if(nums.length!=hash_set.size())
            return true;
        else
            return false;
        
    }
}
-----------------------------------------------------------------------------
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> distinct = new HashSet<Integer>();
        for(int i = 0; i<nums.length;i++)
        {
            if(distinct.contains(nums[i]))
            {
                return true;
            }
            distinct.add(nums[i]);
        }
        return false;
    }
}
